[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ultra-ai-model"
version = "1.0.0"
description = "Revolutionary 390B parameter multimodal AI model with ultra-long context"
readme = "README.md"
license = {text = "Apache-2.0"}
authors = [
    {name = "Ultra-AI Team", email = "contact@ultra-ai.com"}
]
maintainers = [
    {name = "Ultra-AI Team", email = "contact@ultra-ai.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research", 
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10", 
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.9"
dependencies = [
    "torch>=2.1.0",
    "torchvision>=0.16.0",
    "torchaudio>=2.1.0",
    "transformers>=4.36.0",
    "accelerate>=0.24.0",
    "datasets>=2.14.0",
    "tokenizers>=0.14.0",
    "numpy>=1.24.0",
    "scipy>=1.11.0",
    "pillow>=10.0.0",
    "opencv-python>=4.8.0",
    "librosa>=0.10.0",
    "einops>=0.7.0",
    "safetensors>=0.4.0",
    "huggingface-hub>=0.18.0",
    "tqdm>=4.66.0",
    "psutil>=5.9.0",
    "pyyaml>=6.0.0",
    "omegaconf>=2.3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=22.0.0", 
    "flake8>=4.0.0",
    "mypy>=0.950",
    "pre-commit>=2.17.0",
    "isort>=5.10.0",
]
docs = [
    "sphinx>=4.5.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.17.0",
    "sphinx-autodoc-typehints>=1.17.0",
]
training = [
    "wandb>=0.16.0", 
    "tensorboard>=2.14.0",
    "flash-attn>=2.3.0",
    "xformers>=0.0.22",
    "bitsandbytes>=0.41.0",
    "peft>=0.6.0",
]
distributed = [
    "deepspeed>=0.11.0",
]
inference = [
    "onnx>=1.14.0",
    "onnxruntime>=1.16.0",
    "triton>=2.1.0",
    "vllm>=0.2.0",
]
all = [
    "ultra-ai-model[dev,docs,training,inference]"
]

[project.urls]
Homepage = "https://github.com/ultra-ai/ultra-ai-model"
Repository = "https://github.com/ultra-ai/ultra-ai-model.git"
Documentation = "https://ultra-ai-model.readthedocs.io/"
"Bug Reports" = "https://github.com/ultra-ai/ultra-ai-model/issues"
"Research Paper" = "https://arxiv.org/abs/2024.ultra-ai"

[project.scripts]
ultra-ai-train = "scripts.train:main"
ultra-ai-deploy = "scripts.deploy:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*", "scripts*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
ultra_ai_model = ["src/config/*.yaml", "docs/*.md"]

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # Directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["ultra_ai_model"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "torchvision.*", 
    "torchaudio.*",
    "transformers.*",
    "datasets.*",
    "PIL.*",
    "cv2.*",
    "librosa.*",
    "einops.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "gpu: marks tests that require GPU",
]